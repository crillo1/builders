{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","social/twitter.svg","social/telegram.svg","social/home.png","ButtonExt.js","Header.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","h2","TextDescription","h3","p","ButtonExt","location","text","alt","className","href","target","rel","src","Header","home","twitter","telegram","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledImg","img","StyledCont","StyledLink","App","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","claimNFTs","allowedtomint","paused","getCost","dcActive","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","paddingBottom","backgroundColor","padding","color","margin","textAlign","fontSize","textShadow","lineHeight","fontFamily","fontWeight","borderRadius","TITLE_ONE","TITLE_TWO","MAX_PER_WALLET","Number","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","reload","paddingTop","SOLD_OUT","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","PIXELMART","open","width","boxShadow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wlBAAMA,EAAe,CACnBC,SAAS,EACTC,QAAS,KACTC,cAAe,KACfC,KAAM,KACNC,SAAU,IAkCGC,EA/BW,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAC1D,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,2BACFT,GADL,IAEEC,SAAS,IAEb,IAAK,qBACH,OAAO,2BACFM,GADL,IAEEN,SAAS,EACTC,QAASM,EAAOE,QAAQR,QACxBC,cAAeK,EAAOE,QAAQP,cAC9BC,KAAMI,EAAOE,QAAQN,OAEzB,IAAK,oBACH,OAAO,2BACFJ,GADL,IAEEC,SAAS,EACTI,SAAUG,EAAOE,UAErB,IAAK,iBACH,OAAO,2BACFH,GADL,IAEEL,QAASM,EAAOE,QAAQR,UAE5B,QACE,OAAOK,ICnCPP,EAAe,CACnBC,SAAS,EACTU,YAAa,EACbC,KAAM,EACNC,OAAO,EACPR,SAAU,IAiCGS,EA9BK,WAAmC,IAAlCP,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACpD,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,2BACFF,GADL,IAEEN,SAAS,EACTY,OAAO,EACPR,SAAU,KAEd,IAAK,qBACH,OAAO,2BACFE,GADL,IAEEN,SAAS,EACTU,YAAaH,EAAOE,QAAQC,YAE5BE,OAAO,EACPR,SAAU,KAEd,IAAK,oBACH,OAAO,2BACFL,GADL,IAEEC,SAAS,EACTY,OAAO,EACPR,SAAUG,EAAOE,UAErB,QACE,OAAOH,IC7BPQ,EAAcC,YAAgB,CAClCC,WAAYX,EACZY,KAAMJ,IAGFK,EAAa,CAACC,KACdC,EAAmBC,YAAQC,IAAe,WAAf,EAAmBJ,IAQrCK,EALNC,YAAYV,EAAaM,GCE5BK,EAAkB,SAAChB,GACvB,MAAO,CACLD,KAAM,oBACNC,QAASA,IAIAiB,EAAY,WACvB,8CAAO,WAAOC,GAAP,eAAAC,EAAA,6DACLD,EArBK,CACLnB,KAAM,uBAmBD,kBAGqBe,EACrBM,WACAb,WAAWd,cAAc4B,QAAQpB,cACjCqB,OANA,OAGCrB,EAHD,OAYHiB,EA1BG,CACLnB,KAAM,qBACNC,QAyBqB,CACfC,iBAdD,gDAmBHsB,QAAQC,IAAR,MACAN,EAASF,EAAgB,uCApBtB,yDAAP,uDCLIS,EAAgB,SAACzB,GACrB,MAAO,CACLD,KAAM,oBACNC,QAASA,IAyEA0B,EAAgB,SAAClC,GAC5B,8CAAO,WAAO0B,GAAP,SAAAC,EAAA,sDACLD,EAtEK,CACLnB,KAAM,iBACNC,QAoE8B,CAAER,QAASA,KACzC0B,EAASD,KAFJ,2CAAP,uD,QC7FWU,EAASC,IAAOC,IAAV,kOAEG,gBAAGC,EAAH,EAAGA,MAAH,OAAgBA,EAAK,cAAUA,EAAV,KAAqB,UAgBnDC,GANeH,IAAOC,IAAV,2DAMED,IAAOC,IAAV,8DAMXG,EAAeJ,IAAOC,IAAV,6DAMZI,EAAcL,IAAOC,IAAV,6DAMXK,EAAYN,IAAOC,IAAV,+RAEZ,gBAAGM,EAAH,EAAGA,KAAH,OAAeA,GAAc,KACnB,gBAAGC,EAAH,EAAGA,GAAH,OAAaA,GAAU,YACtB,gBAAGC,EAAH,EAAGA,GAAH,OAAaA,GAAU,gBAC3B,gBAAGC,EAAH,EAAGA,GAAH,OAAaA,GAAU,gBAClB,qBAAGC,KAAmB,UAAY,UAElC,gBAAGT,EAAH,EAAGA,MAAH,OAAgBA,EAAK,cAAUA,EAAV,KAAqB,UAMnDU,GAAYZ,IAAOa,GAAV,oJAeTC,IAPed,IAAOe,GAAV,+HAOMf,IAAOgB,EAAV,gICpEb,ID2EgBhB,IAAOC,IAAV,iE,OC3Eb,IAA0B,qCCA1B,OAA0B,qCCA1B,OAA0B,iC,iBCW1BgB,GATG,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,KAAMjB,EAAiB,EAAjBA,MAAOkB,EAAU,EAAVA,IAC1C,OACE,qBAAGC,UAAU,SAASC,KAAMJ,EAAUK,OAAO,SAASC,IAAI,aAA1D,UACGL,EACAjB,GAAS,sBAAKmB,UAAU,cAAcI,IAAKvB,EAAOkB,IAAKA,QCgC/CM,GAjCA,WACb,OACE,sBAAKL,UAAU,iBAAf,SACE,uBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,eAAf,SACE,eAAC,GAAD,CACEH,SAAS,4BACThB,MAAOyB,GACPP,IAAK,WAGT,uBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,oBAAf,SACE,eAAC,GAAD,CACEH,SAAS,oCACThB,MAAO0B,GACPR,IAAK,cAIT,sBAAKC,UAAU,oBAAf,SACE,eAAC,GAAD,CACEH,SAAS,6BACThB,MAAO2B,GACPT,IAAK,wBCjBNU,GAAe9B,IAAO+B,OAAV,s7BAmCZC,GAAoBhC,IAAO+B,OAAV,i3BAkCjBE,GAAoBjC,IAAOC,IAAV,iRAwBjBiC,IAXalC,IAAOmC,IAAV,qMAWEnC,IAAOmC,IAAV,sQAWTC,GAAapC,IAAOC,IAAV,+TAeVoC,GAAarC,IAAOT,EAAV,uEA8YR+C,OAzYf,WACE,IAAMhD,EAAWiD,cACX5D,EAAa6D,aAAY,SAACvE,GAAD,OAAWA,EAAMU,cAC1CC,EAAO4D,aAAY,SAACvE,GAAD,OAAWA,EAAMW,QAC1C,EAAsC6D,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,mBAAS,gCAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA6BN,mBAAS,CACpCO,iBAAkB,GAClBC,UAAW,GACXC,QAAS,CACPC,KAAM,GACNC,OAAQ,GACRC,GAAI,GAENC,SAAU,GACVF,OAAQ,GACRG,WAAY,EACZC,SAAU,EACVC,aAAc,EACdC,UAAW,EACXC,YAAa,GACbC,iBAAkB,GAClBC,iBAAiB,IAhBnB,mBAAOC,EAAP,KAAeC,EAAf,KAmBMC,EAAS,uCAAG,wCAAAzE,EAAA,6DACZ0E,GAAgB,EADJ,SAEG/E,EAChBM,WACAb,WAAWd,cAAc4B,QAAQyE,SACjCxE,OALa,cAEZwE,EAFY,gBAMKhF,EAClBM,WACAb,WAAWd,cAAc4B,QAAQ0E,UACjCzE,OATa,OAMZ0E,EANY,OAWZF,EACFrB,EAAY,6BAERuB,IAAaH,EACfpB,EAAY,wCAERvE,EAAOwF,EAAON,SACda,EAAWP,EAAOJ,UAClBY,EAAeC,OAAOjG,EAAOwE,GAC7B0B,EAAgBD,OAAOF,EAAWvB,GACtCD,EAAY,gBAAD,OAAiBiB,EAAOR,SAAxB,QACXX,GAAe,GACfhE,EAAWd,cAAc4B,QACtBgF,KAAK3B,GAEL4B,KAAK,CACJL,SAAUE,OAAOC,GACjBG,GAAIb,EAAOd,iBACX4B,KAAMjG,EAAWf,QACjBiH,MAAOP,IAERQ,KAAK,SAAS,SAACC,GACdpF,QAAQC,IAAImF,GACZlC,EAAY,uDACZF,GAAe,MAEhBqC,MAAK,SAACC,GACLtF,QAAQC,IAAIqF,GACZpC,EAAY,8CACZF,GAAe,OAxCP,2CAAH,qDA8DTwB,EAAU,WACa,KAAvBxF,EAAWf,SAA+C,OAA7Be,EAAWd,eAC1CyB,EAASD,EAAUV,EAAWf,WAI5BsH,EAAU,WACa,KAAvBvG,EAAWf,SAA+C,OAA7Be,EAAWd,eAC1CyB,EAASD,EAAUV,EAAWf,WAK5BuH,EAAS,uCAAG,8BAAA5F,EAAA,sEACa6F,MAAM,sBAAuB,CACxDC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAJI,cACVC,EADU,gBAOKA,EAAeC,OAPpB,OAOVC,EAPU,OAQhB1B,EAAW0B,GARK,2CAAH,qDAwBf,OAbAC,qBAAU,WACRP,MACC,IAEHO,qBAAU,WACRR,MACC,CAACvG,EAAWf,UAEf8H,qBAAU,WACRvB,MACC,CAACxF,EAAWf,UAIb,uCACE,eAAC,GAAD,IACA,sBAAK+H,MAAO,CAAEC,cAAe,SAAUC,gBAAiB,aACxD,eAAC,EAAD,UACE,gBAAC,EAAD,CACEtF,KAAM,EACNG,GAAI,SACJiF,MAAO,CAAEG,QAAS,cAClB5F,MAAO4D,EAAOD,gBAAkB,yBAA2B,KAJ7D,UAME,qBACE8B,MAAO,CACLI,MAAO,UACPC,OAAQ,IACRC,UAAW,SACXC,SAAU,OACVC,WAAY,wBACZC,WAAY,OACZC,WAAY,QACZC,WAAY,OAThB,4BAcA,eAAC,EAAD,IACA,gBAACrE,GAAD,CAAmB1B,KAAM,EAAGoF,MAAO,CAAEG,QAAS,UAA9C,UACE,eAAC,EAAD,CAAavF,KAAM,EAAGE,GAAI,SAAUC,GAAI,SAAxC,SACE,eAACwB,GAAD,CAAWd,IAAK,UAAWK,IAAK,8BAElC,eAAC,EAAD,IACA,gBAAC,EAAD,CACElB,KAAM,EACNE,GAAI,SACJC,GAAI,SACJiF,MAAO,CACLG,QAAS,yBACTS,aAAc,IANlB,UASE,eAAC,GAAD,CACEZ,MAAO,CACLM,UAAW,SACXC,SAAU,OACVI,WAAY,OACZP,MAAO,SALX,SAQGjC,EAAO0C,YAEV,eAAC,GAAD,CACEb,MAAO,CACLM,UAAW,SACXC,SAAU,GACVI,WAAY,OACZP,MAAO,WALX,SAQGjC,EAAO2C,YAEV,eAAC,GAAD,CACEd,MAAO,CACLM,UAAW,SACXC,SAAU,KACVH,MAAO,WAJX,SAOGjC,EAAO4C,iBAEV,eAAC,GAAD,CACEf,MAAO,CACLM,UAAW,SACXC,SAAU,GACVI,WAAY,OACZP,MAAO,SALX,SASwB,IAArBnH,EAAKP,YAAL,UACMO,EAAKP,YADX,cAC4ByF,EAAOP,YADnC,cAEUO,EAAOP,cAEnBoD,OAAO/H,EAAKP,cAAgByF,EAAOP,WAClC,uCACE,eAAC,GAAD,CAAaoC,MAAO,CAAEM,UAAW,SAAUF,MAAO,SAAlD,iCAGA,gBAAC,GAAD,CACEJ,MAAO,CAAEM,UAAW,SAAUF,MAAO,SADvC,gCAGsBjC,EAAOR,SAH7B,SAKA,eAAC,EAAD,IACA,eAACjB,GAAD,CAAYd,OAAQ,SAAUD,KAAMwC,EAAOF,iBAA3C,SACGE,EAAOH,iBAIZ,uCACE,gBAAC,GAAD,CAAagC,MAAO,CAAEM,UAAW,SAAUF,MAAO,SAAlD,yBACejC,EAAOL,aADtB,YAGA,eAAC,GAAD,CACEkC,MAAO,CAAEM,UAAW,SAAUF,MAAO,SADvC,kCAKA,eAAC,EAAD,IACwB,KAAvBpH,EAAWf,SACiB,OAA7Be,EAAWd,cACT,gBAAC,EAAD,CAAa6C,GAAI,SAAUD,GAAI,SAA/B,UACE,eAAC,GAAD,CACEkF,MAAO,CACLM,UAAW,SACXF,MAAO,SAHX,0CAQA,eAAC,EAAD,IACA,eAACjE,GAAD,CACE8E,QAAS,SAACC,GACRA,EAAEC,iBACFxH,EP9VxB,uCAAO,WAAOA,GAAP,+BAAAC,EAAA,6DACLD,EA5BK,CACLnB,KAAM,uBA0BD,SAEqBiH,MAAM,mBAAoB,CAClDC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBALP,cAECyB,EAFD,gBAQaA,EAAYvB,OARzB,cAQCwB,EARD,gBASwB5B,MAAM,sBAAuB,CACxDC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAZP,cASCC,EATD,iBAegBA,EAAeC,OAf/B,WAeC1B,EAfD,SAgBgBmD,SAAbC,EAhBH,EAgBGA,YACgCA,EAASC,WAjB5C,wBAmBHC,IAAgBC,YAAYH,GACxBpJ,EAAO,IAAIwJ,IAAKJ,GApBjB,oBAsBsBA,EAASK,QAAQ,CACtCC,OAAQ,wBAvBT,eAsBKC,EAtBL,iBAyBuBP,EAASK,QAAQ,CACvCC,OAAQ,gBA1BT,gBA4BgB1D,EAAOZ,QAAQG,IACxBqE,EAAmB,IAAIN,IAC3BJ,EACAlD,EAAOd,kBAGT1D,EAvDD,CACLnB,KAAM,qBACNC,QAsDuB,CACbR,QAAS6J,EAAS,GAClB5J,cAAe6J,EACf5J,KAAMA,KAIVoJ,EAASS,GAAG,mBAAmB,SAACF,GAC9BnI,EAASQ,EAAc2H,EAAS,QAElCP,EAASS,GAAG,gBAAgB,WAC1BV,OAAO/F,SAAS0G,aAIlBtI,EAASO,EAAc,qBAAD,OAAsBiE,EAAOZ,QAAQC,KAArC,OAlDvB,mDAqDD7D,EAASO,EAAc,0BArDtB,gCAwDHP,EAASO,EAAc,sBAxDpB,2DAAP,uDO+VwBsE,IACAe,KALJ,qBAUyB,KAAxBvG,EAAWZ,SACV,uCACE,eAAC,EAAD,IACA,eAAC,GAAD,CACE4H,MAAO,CACLM,UAAW,SACXF,MAAO,SAHX,SAMGpH,EAAWZ,cAGd,KACJ,eAAC,GAAD,CACE4H,MAAO,CACLM,UAAW,SACXC,SAAU,GACVI,WAAY,OACZP,MAAO,QACP8B,WAAY,IANhB,SASG/D,EAAOgE,cAIZ,uCACE,eAAC,GAAD,CACEnC,MAAO,CACLM,UAAW,SACXF,MAAO,SAHX,SAMGnD,IAEH,eAAC,EAAD,IACA,gBAAC,EAAD,CAAalC,GAAI,SAAUD,GAAI,SAAUD,GAAI,MAA7C,UACE,eAACwB,GAAD,CACE2D,MAAO,CAAES,WAAY,IACrB2B,SAAUrF,EAAc,EAAI,EAC5BkE,QAAS,SAACC,GACRA,EAAEC,iBAhOA,WAC1B,IAAIkB,EAAgBlF,EAAa,EAC7BkF,EAAgB,IAClBA,EAAgB,GAElBjF,EAAciF,GA4NUC,IALJ,eAUA,eAAC,EAAD,IACA,eAAC,GAAD,CACEtC,MAAO,CACLM,UAAW,SACXF,MAAO,SAHX,SAMGjD,IAEH,eAAC,EAAD,IACA,eAACd,GAAD,CACE+F,SAAUrF,EAAc,EAAI,EAC5BkE,QAAS,SAACC,GACRA,EAAEC,iBA3OA,WAC1B,IAAIkB,EAAgBlF,EAAa,EAC7BkF,EAAgB,KAClBA,EAAgB,IAElBjF,EAAciF,GAuOUE,IAJJ,kBAUF,eAAC,EAAD,IACA,eAAC,EAAD,CAAaxH,GAAI,SAAUD,GAAI,SAAUD,GAAI,MAA7C,SACE,eAACsB,GAAD,CACEiG,SAAUrF,EAAc,EAAI,EAC5BkE,QAAS,SAACC,GACRA,EAAEC,iBACF9C,IACAkB,KALJ,SAQGxC,EAAc,UAAY,iBAOvC,eAAC,EAAD,UAIJ,gBAACN,GAAD,WACuB,IAApB0B,EAAOqE,UACN,eAACrG,GAAD,CACE8E,QAAS,SAACC,GACRA,EAAEC,iBACFG,OAAOmB,KAAKtE,EAAOqE,UAAW,WAEhCxC,MAAO,CACL0C,MAAO,IACPC,UAAW,WAPf,oBAYE,KACiB,IAApBxE,EAAOb,UACN,eAACnB,GAAD,CACE8E,QAAS,SAACC,GACRA,EAAEC,iBACFG,OAAOmB,KAAKtE,EAAOb,UAAW,WAEhC0C,MAAO,CACL0C,MAAO,IACPC,UAAW,WAPf,sBAYE,QAEN,eAAC,EAAD,CAAa7H,GAAI,SAAUC,GAAI,SAAUiF,MAAO,CAAE0C,MAAO,OAAzD,SACE,gBAAC,GAAD,CACE1C,MAAO,CACLM,UAAW,SACXF,MAAO,QACPH,cAAe,QAJnB,sEAQG9B,EAAOZ,QAAQC,KARlB,sCAQ0D,wBAR1D,sFClfGoF,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzD,MAAK,YAAkD,IAA/C0D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCCdO,IAASC,OACP,eAAC,IAAD,CAAU9J,MAAOA,EAAjB,SACE,eAAC,GAAD,MAEF+J,SAASC,eAAe,SAM1BX,O","file":"static/js/main.94c7ea4e.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  totalSupply: 0,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalSupply: action.payload.totalSupply,\r\n        // cost: action.payload.cost,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      // let cost = await store\r\n      //   .getState()\r\n      //   .blockchain.smartContract.methods.cost()\r\n      //   .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          totalSupply,\r\n          // cost,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const abiResponse = await fetch(\"/config/abi.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const abi = await abiResponse.json();\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const CONFIG = await configResponse.json();\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        if (networkId == CONFIG.NETWORK.ID) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            abi,\r\n            CONFIG.CONTRACT_ADDRESS\r\n          );\r\n\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: #ff2020;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"#ffa600\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: top;\r\n  background-repeat: no-repeat;\r\n`;\r\n\r\nexport const TextTitle = styled.h2`\r\n  font-family: \"Kemco\";\r\n  color: var(--primary-text);\r\n  font-size: 2.2rem;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.h3`\r\n  font-family: \"Kemco\";\r\n  color: var(--primary-text);\r\n  font-size: 1.8rem;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  font-family: \"Kemco\";\r\n  color: var(--primary-text);\r\n  font-size: 1.6rem;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/twitter.206600d4.svg\";","export default __webpack_public_path__ + \"static/media/telegram.240a821d.svg\";","export default __webpack_public_path__ + \"static/media/home.4669f959.png\";","import \"./styles/Button.css\";\r\n\r\nconst ButtonExt = ({ location, text, image, alt }) => {\r\n  return (\r\n    <a className=\"button\" href={location} target=\"_blank\" rel=\"noreferrer\">\r\n      {text}\r\n      {image && <img className=\"button--img\" src={image} alt={alt} />}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default ButtonExt;\r\n","import \"./styles/Header.css\";\r\nimport twitter from \"./social/twitter.svg\";\r\nimport telegram from \"./social/telegram.svg\";\r\nimport home from \"./social/home.png\";\r\nimport ButtonExt from \"./ButtonExt\";\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header-wrapper\">\r\n      <div className=\"header-items\">\r\n        <div className=\"header--logo\">\r\n          <ButtonExt\r\n            location=\"https://dogechainpaws.dog\"\r\n            image={home}\r\n            alt={\"Home\"}\r\n          />\r\n        </div>\r\n        <div className=\"header--nav\">\r\n          <div className=\"header--nav-items\">\r\n            <ButtonExt\r\n              location=\"https://twitter.com/dogechainpaws\"\r\n              image={twitter}\r\n              alt={\"Twitter\"}\r\n            />\r\n          </div>\r\n        \r\n          <div className=\"header--nav-items\">\r\n            <ButtonExt\r\n              location=\"https://t.me/dogechainpaws\"\r\n              image={telegram}\r\n              alt={\"Telegram\"}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport store from \"./redux/store\";\r\nimport Header from \"./Header\";\r\n\r\nconst truncate = (input, len) =>\r\n  input.length > len ? `${input.substring(0, len)}...` : input;\r\n\r\nexport const StyledButton = styled.button`\r\n  align-self: center;\r\n  font-family: 'Kemco';\r\n  background-color: #ff2020;\r\n  background-image: none;\r\n  background-position: 0 90%;\r\n  background-repeat: repeat no-repeat;\r\n  background-size: 4px 3px;\r\n  border-radius: 15px 225px 255px 15px 15px 255px 225px 15px;\r\n  border-style: solid;\r\n  border-width: 2px;\r\n  box-shadow: #dfdcd7 4px 4px 1px 1px;\r\n  box-sizing: border-box;\r\n  color: #010606;\r\n  border-color: #010606;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  font-size: 2rem;\r\n  line-height: 23px;\r\n  outline: none;\r\n  padding: 0.75rem;\r\n  text-decoration: none;\r\n  transition: all 235ms ease-in-out;\r\n  border-bottom-left-radius: 15px 255px;\r\n  border-bottom-right-radius: 225px 15px;\r\n  border-top-left-radius: 255px 15px;\r\n  border-top-right-radius: 15px 225px;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  touch-action: manipulation;\r\n  :hover {\r\n    transform: translate3d(0, -2px, 0);\r\n  }\r\n`;\r\n\r\nexport const StyledRoundButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 100%;\r\n  border: none;\r\n  background-color: #f7f8fa;\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  color: black;\r\n  width: 30px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 15px 225px 255px 15px 15px 255px 225px 15px;\r\n  border-style: solid;\r\n  border-width: 2px;\r\n  color: #010606;\r\n  border-color: #010606;\r\n  border-bottom-left-radius: 15px 255px;\r\n  border-bottom-right-radius: 225px 15px;\r\n  border-top-left-radius: 255px 15px;\r\n  border-top-right-radius: 15px 225px;\r\n  box-shadow: #000000\r\n  -webkit-box-shadow: rgba(245, 220, 255, 1) 4px 4px 1px 1px;\r\n  -moz-box-shadow: rgba(245, 220, 255, 1) 4px 4px 1px 1px;\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  /* @media (max-width: 766px) {\r\n    flex-direction: column; */\r\n    /* flex-direction: column-reverse; */\r\n  }\r\n`;\r\n\r\nexport const StyledLogo = styled.img`\r\n  width: 195px;\r\n  @media (min-width: 767px) {\r\n    width: 195px;\r\n  }\r\n  max-height: 100px;\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n   box-shadow: rgb(189, 53, 53) 4px 4px 1px 1px;\r\n  background-color: #66bcd7;\r\n  height: auto;\r\n  margin: 0 auto;\r\n  max-width: 30rem;\r\n  border-radius: 50%;\r\n  box-shadow: 0 0 1rem 0.2rem #ffa600;\r\n  /* transition: width 0.5s; */\r\n`;\r\n\r\nexport const StyledCont = styled.div`\r\n  /* width: 60%; */\r\n  /* border: 2px solid black; */\r\n  padding: 0 10rem 2rem 10rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  grid-gap: 3rem;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  @media (max-width: 766px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  color: black;\r\n  text-decoration: none;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [feedback, setFeedback] = useState(`Click MINT to mint your NFT.`);\r\n  const [mintAmount, setMintAmount] = useState(1);\r\n  const [CONFIG, SET_CONFIG] = useState({\r\n    CONTRACT_ADDRESS: \"\",\r\n    SCAN_LINK: \"\",\r\n    NETWORK: {\r\n      NAME: \"\",\r\n      SYMBOL: \"\",\r\n      ID: 0,\r\n    },\r\n    NFT_NAME: \"\",\r\n    SYMBOL: \"\",\r\n    MAX_SUPPLY: 1,\r\n    WEI_COST: 0,\r\n    DISPLAY_COST: 0,\r\n    GAS_LIMIT: 0,\r\n    MARKETPLACE: \"\",\r\n    MARKETPLACE_LINK: \"\",\r\n    SHOW_BACKGROUND: false,\r\n  });\r\n\r\n  const claimNFTs = async () => {\r\n    let allowedtomint = true;\r\n    let paused = await store\r\n      .getState()\r\n      .blockchain.smartContract.methods.paused()\r\n      .call();\r\n    let dcActive = await store\r\n      .getState()\r\n      .blockchain.smartContract.methods.getCost()\r\n      .call();\r\n\r\n    if (paused) {\r\n      setFeedback(\"The sale is not open yet.\");\r\n    } else {\r\n      if (dcActive && !allowedtomint) {\r\n        setFeedback(\"You have no discount, regular price\");\r\n      } else {\r\n        let cost = CONFIG.WEI_COST;\r\n        let gasLimit = CONFIG.GAS_LIMIT;\r\n        let totalCostWei = String(cost * mintAmount);\r\n        let totalGasLimit = String(gasLimit * mintAmount);\r\n        setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n        setClaimingNft(true);\r\n        blockchain.smartContract.methods\r\n          .mint(mintAmount)\r\n          // .totalSupply()\r\n          .send({\r\n            gasLimit: String(totalGasLimit),\r\n            to: CONFIG.CONTRACT_ADDRESS,\r\n            from: blockchain.account,\r\n            value: totalCostWei,\r\n          })\r\n          .once(\"error\", (err) => {\r\n            console.log(err);\r\n            setFeedback(\"Sorry, something went wrong please try again later.\");\r\n            setClaimingNft(false);\r\n          })\r\n          .then((receipt) => {\r\n            console.log(receipt);\r\n            setFeedback(`You've successfully minted your Shiba Ape!`);\r\n            setClaimingNft(false);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const decrementMintAmount = () => {\r\n    let newMintAmount = mintAmount - 1;\r\n    if (newMintAmount < 1) {\r\n      newMintAmount = 1;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const incrementMintAmount = () => {\r\n    let newMintAmount = mintAmount + 1;\r\n    if (newMintAmount > 10) {\r\n      newMintAmount = 10;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const getCost = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n\r\n  const getConfig = async () => {\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const config = await configResponse.json();\r\n    SET_CONFIG(config);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  useEffect(() => {\r\n    getCost();\r\n  }, [blockchain.account]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div style={{ paddingBottom: \"2.8rem\", backgroundColor: \"#ff2020\" }} />\r\n      <s.Screen>\r\n        <s.Container\r\n          flex={1}\r\n          ai={\"center\"}\r\n          style={{ padding: \"24px 0 0 0\" }}\r\n          image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.jpeg\" : null}\r\n        >\r\n          <h1\r\n            style={{\r\n              color: \"#ffffff\",\r\n              margin: \"0\",\r\n              textAlign: \"center\",\r\n              fontSize: \"5rem\",\r\n              textShadow: \"0.4rem 0.4rem #000000\",\r\n              lineHeight: \"5rem\",\r\n              fontFamily: \"Kemco\",\r\n              fontWeight: \"700\",\r\n            }}\r\n          >\r\n            DOGECHAIN PAWS\r\n          </h1>\r\n          <s.SpacerSmall />\r\n          <ResponsiveWrapper flex={1} style={{ padding: \"24px 0\" }}>\r\n            <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n              <StyledImg alt={\"DC PAWS\"} src={\"/config/images/mint.gif\"} />\r\n            </s.Container>\r\n            <s.SpacerLarge />\r\n            <s.Container\r\n              flex={2}\r\n              jc={\"center\"}\r\n              ai={\"center\"}\r\n              style={{\r\n                padding: \"2.4rem 2.4rem 0 2.4rem\",\r\n                borderRadius: 24,\r\n              }}\r\n            >\r\n              <s.TextTitle\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  fontSize: \"4rem\",\r\n                  fontWeight: \"bold\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                {CONFIG.TITLE_ONE}\r\n              </s.TextTitle>\r\n              <s.TextTitle\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  fontSize: 30,\r\n                  fontWeight: \"bold\",\r\n                  color: \"#ffffff\",\r\n                }}\r\n              >\r\n                {CONFIG.TITLE_TWO}\r\n              </s.TextTitle>\r\n              <s.TextTitle\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  fontSize: \"25\",\r\n                  color: \"#ffffff\",\r\n                }}\r\n              >\r\n                {CONFIG.MAX_PER_WALLET}\r\n              </s.TextTitle>\r\n              <s.TextTitle\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  fontSize: 50,\r\n                  fontWeight: \"bold\",\r\n                  color: \"white\",\r\n                }}\r\n                \r\n              >\r\n                {data.totalSupply !== 0\r\n                  ? `${data.totalSupply} / ${CONFIG.MAX_SUPPLY}`\r\n                  : `? / ${CONFIG.MAX_SUPPLY}`}\r\n              </s.TextTitle>\r\n              {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\r\n                <>\r\n                  <s.TextTitle style={{ textAlign: \"center\", color: \"white\" }}>\r\n                    The sale has ended.\r\n                  </s.TextTitle>\r\n                  <s.TextDescription\r\n                    style={{ textAlign: \"center\", color: \"black\" }}\r\n                  >\r\n                    You can still find {CONFIG.NFT_NAME} on\r\n                  </s.TextDescription>\r\n                  <s.SpacerSmall />\r\n                  <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\r\n                    {CONFIG.MARKETPLACE}\r\n                  </StyledLink>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <s.TextTitle style={{ textAlign: \"center\", color: \"white\" }}>\r\n                    1 PAW COSTS {CONFIG.DISPLAY_COST} wDOGE\r\n                  </s.TextTitle>\r\n                  <s.TextDescription\r\n                    style={{ textAlign: \"center\", color: \"white\" }}\r\n                  >\r\n                    (Excluding gas fees)\r\n                  </s.TextDescription>\r\n                  <s.SpacerSmall />\r\n                  {blockchain.account === \"\" ||\r\n                  blockchain.smartContract === null ? (\r\n                    <s.Container ai={\"center\"} jc={\"center\"}>\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: \"white\",\r\n                        }}\r\n                      >\r\n                        Connect your Metamask wallet\r\n                      </s.TextDescription>\r\n                      <s.SpacerSmall />\r\n                      <StyledButton\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          dispatch(connect());\r\n                          getCost();\r\n                          getData();\r\n                        }}\r\n                      >\r\n                        CONNECT\r\n                      </StyledButton>\r\n                      {blockchain.errorMsg !== \"\" ? (\r\n                        <>\r\n                          <s.SpacerSmall />\r\n                          <s.TextDescription\r\n                            style={{\r\n                              textAlign: \"center\",\r\n                              color: \"white\",\r\n                            }}\r\n                          >\r\n                            {blockchain.errorMsg}\r\n                          </s.TextDescription>\r\n                        </>\r\n                      ) : null}\r\n                      <s.TextTitle\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          fontSize: 20,\r\n                          fontWeight: \"bold\",\r\n                          color: \"white\",\r\n                          paddingTop: 25,\r\n                        }}\r\n                      >\r\n                        {CONFIG.SOLD_OUT}\r\n                      </s.TextTitle>\r\n                    </s.Container>\r\n                  ) : (\r\n                    <>\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: \"white\",\r\n                        }}\r\n                      >\r\n                        {feedback}\r\n                      </s.TextDescription>\r\n                      <s.SpacerMedium />\r\n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                        <StyledRoundButton\r\n                          style={{ lineHeight: 0.4 }}\r\n                          disabled={claimingNft ? 1 : 0}\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            decrementMintAmount();\r\n                          }}\r\n                        >\r\n                          -\r\n                        </StyledRoundButton>\r\n                        <s.SpacerMedium />\r\n                        <s.TextDescription\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            color: \"white\",\r\n                          }}\r\n                        >\r\n                          {mintAmount}\r\n                        </s.TextDescription>\r\n                        <s.SpacerMedium />\r\n                        <StyledRoundButton\r\n                          disabled={claimingNft ? 1 : 0}\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            incrementMintAmount();\r\n                          }}\r\n                        >\r\n                          +\r\n                        </StyledRoundButton>\r\n                      </s.Container>\r\n                      <s.SpacerSmall />\r\n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                        <StyledButton\r\n                          disabled={claimingNft ? 1 : 0}\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            claimNFTs();\r\n                            getData();\r\n                          }}\r\n                        >\r\n                          {claimingNft ? \"MINTING\" : \"MINT\"}\r\n                        </StyledButton>\r\n                      </s.Container>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n              <s.SpacerMedium />\r\n            </s.Container>\r\n          </ResponsiveWrapper>\r\n\r\n          <StyledCont>\r\n            {CONFIG.PIXELMART != \"\" ? (\r\n              <StyledButton\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  window.open(CONFIG.PIXELMART, \"_blank\");\r\n                }}\r\n                style={{\r\n                  width: 120,\r\n                  boxShadow: \"#000000\",\r\n                }}\r\n              >\r\n                MANTRA\r\n              </StyledButton>\r\n            ) : null}\r\n            {CONFIG.SCAN_LINK != \"\" ? (\r\n              <StyledButton\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  window.open(CONFIG.SCAN_LINK, \"_blank\");\r\n                }}\r\n                style={{\r\n                  width: 120,\r\n                  boxShadow: \"#000000\",\r\n                }}\r\n              >\r\n                CONTRACT\r\n              </StyledButton>\r\n            ) : null}\r\n          </StyledCont>\r\n          <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\r\n            <s.TextDescription\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: \"white\",\r\n                paddingBottom: \"4rem\",\r\n              }}\r\n            >\r\n              Please make sure you are connected to the right network (\r\n              {CONFIG.NETWORK.NAME} Mainnet) and the correct address. <br />\r\n              Please note: Once you make the purchase, you cannot undo this\r\n              action.\r\n            </s.TextDescription>\r\n          </s.Container>\r\n        </s.Container>\r\n      </s.Screen>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}